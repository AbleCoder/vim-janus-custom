" set color scheme
syntax enable
set background=dark
colorscheme ir_black

" ZoomWin configuration
map <Leader><Leader> :ZoomWin<CR>

" Whitespace stuff
set nowrap
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

" Highlight trailing spaces
set list listchars=tab:\ \ ,trail:Â·

" Trailing space removal on save
function! StripTrailingSpaces()
    let l = line(".")
    let c = col(".")
    silent! execute '%s/\s\+$//e'
    call cursor(l, c)
endfunction
au BufWritePre * :call StripTrailingSpaces()

" Retain visual block after indenting with < or >
vmap > >gv
vmap < <gv

" setup CtrlP to open files once per tab (instead of once per all open tabs)
let g:ctrlp_switch_buffer = 1

" setup viewport swapping
function! MarkWindowSwap()
    let g:markedWinNum = winnr()
endfunction

function! DoWindowSwap()
    "Mark destination
    let curNum = winnr()
    let curBuf = bufnr( "%" )
    exe g:markedWinNum . "wincmd w"
    "Switch to source and shuffle dest->source
    let markedBuf = bufnr( "%" )
    "Hide and open so that we aren't prompted and keep history
    exe 'hide buf' curBuf
    "Switch to dest and shuffle source->dest
    exe curNum . "wincmd w"
    "Hide and open so that we aren't prompted and keep history
    exe 'hide buf' markedBuf
endfunction

"nmap <silent> <leader>mw :call MarkWindowSwap()<CR>
"nmap <silent> <leader>pw :call DoWindowSwap()<CR>

" split-it mapping
nmap <leader>-  :new<CR>
nmap <leader>[  :vnew<CR>
nmap <leader>]  :rightbelow vnew<CR>
nmap <leader>_  :rightbelow new<CR>

" custom file type settings
au FileType html,htmldjango,less
    \ set shiftwidth=2 softtabstop=2 tabstop=2 textwidth=239

"au BufRead,BufNewFile *.clj set filetype=clojure

" set screen.vim to use tmux
let g:ScreenImpl = 'Tmux'

" tslime bindings
vmap <C-c><C-c> <Plug>SendSelectionToTmux
nmap <C-c><C-c> <Plug>NormalModeSendToTmux
nmap <C-c>r <Plug>SetTmuxVars

" disable janus maps that conflict with VimClojure
unmap <leader>et
unmap <leader>rt

" VimClojure config
let vimclojure#WantNailgun = 1
let vimclojure#NailgunServer = "127.0.0.1"
let vimclojure#NailgunPort = "2113"
let vimclojure#HighlightBuiltins=1
let vimclojure#HighlightContrib=1
let vimclojure#DynamicHighlighting=1
let vimclojure#ParenRainbow=1

" Screen.vim conf
let g:ScreenShellTmuxInitArgs = '-2' " start tmux with 256 color support
let g:ScreenShellHeight = 3

" Start vimclojure nailgun server (uses screen.vim to manage lifetime)
nmap <silent> <Leader>sc :execute "ScreenShell ~/.vim-lib/vimclojure/ng-server" <cr>
" Start a generic Clojure repl (uses screen.vim)
nmap <silent> <Leader>sC :execute "ScreenShell lein repl" <cr>
